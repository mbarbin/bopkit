#include <stdlib.bop>
#include <bopboard.bop>
#include <pulse.bop>

#define N 8
#define PULSE__CYCLES_PER_SECOND 16

/**
 * That's a bus of size N with exactly 1 bit '1' and the rest '0'.
 * The bit that is lit shifts from left to right, until it reaches the
 * end of the bus, and restarts at 0.
 * @param reset set the bus to the initial state.
 * @return bd the shifting bits.
 */
CyclerBD[N](reset, predBD:[N]) = bd:[N]
where
  bd:[N] = Mux[N](reset, Vdd(), Gnd[N - 1](), u:[N]);
  for i = 0 to N - 1
    u[(i + 1) mod N] = Id(predBD[i]);
  end for;
end where;

/**
 * Same as [CyclerBD] but with a memory.
 */
CyclerRG[N](reset) = bd:[N]
where
  bd:[N] = CyclerBD[N](reset, Reg[N](bd:[N]));
end where;

MainCycler(reset) = bd:[N]
where
  bd:[N] = CyclerRG[N](Reg1(reset));
end where;

Main() = bd:[N]
where
  $pulse();
  reset = $bopboard.push("0");
  bd:[N] = MainCycler(reset);
  $bopboard.light(bd:[N]);
end where;
