(include dune.asm.inc)

(include dune.bop.inc)

(rule
 (target dune.asm.inc.raw)
 (deps
  (glob_files *.asm))
 (action
  (with-stdout-to
   %{target}
   (run %{bin:visa} fmt gen-dune "\%{bin:visa}" fmt file))))

(rule
 (alias runtest)
 (mode promote)
 (action
  (format-dune-file dune.asm.inc.raw dune.asm.inc)))

(rule
 (target dune.bop.inc.raw)
 (deps
  (glob_files *.bop))
 (action
  (with-stdout-to
   %{target}
   (run
    %{bin:bopkit}
    fmt
    gen-dune
    --exclude
    div10.bop
    "\%{bin:bopkit}"
    fmt
    file))))

(rule
 (alias runtest)
 (mode promote)
 (action
  (format-dune-file dune.bop.inc.raw dune.bop.inc)))

(rule
 (with-stdout-to
  calendar.sexp.corrected
  (run %{bin:visa} parse %{dep:calendar.asm})))

(rule
 (alias runtest)
 (action
  (diff test/calendar.sexp calendar.sexp.corrected)))

(rule
 (with-stdout-to
  calendar.processed.corrected
  (run %{bin:visa} process %{dep:calendar.asm})))

(rule
 (alias runtest)
 (action
  (diff test/calendar.processed calendar.processed.corrected)))

(rule
 (with-stdout-to
  calendar.bin.corrected
  (run %{bin:visa} assemble %{dep:calendar.asm})))

(rule
 (alias runtest)
 (action
  (diff calendar.bin calendar.bin.corrected)))

(rule
 (with-stdout-to
  calendar.processed.bin.corrected
  (run %{bin:visa} assemble %{dep:test/calendar.processed})))

(rule
 (alias runtest)
 (action
  (diff calendar.bin calendar.processed.bin.corrected)))

(rule
 (with-stdout-to
  calendar.processed.processed
  (run %{bin:visa} process %{dep:test/calendar.processed})))

(rule
 (alias runtest)
 (action
  (diff test/calendar.processed calendar.processed.processed)))

(rule
 (with-stdout-to
  calendar.disassembled
  (run %{bin:visa} disassemble %{dep:calendar.bin})))

(rule
 (alias runtest)
 (action
  (diff test/calendar.processed calendar.disassembled)))

(rule
 (target initial-memory.txt)
 (alias runtest)
 (mode promote)
 (action
  (with-stdout-to
   %{target}
   (run %{dep:get_date.exe} "23:59:56" "1999/12/31"))))

(rule
 (alias visa-simulation-soft-mapping)
 (deps
  calendar.bin
  initial-memory.txt
  (package bopkit))
 (action
  (bash
   "%{bin:bopkit} simu %{dep:visa.bop} --output-only-on-change | %{bin:bopkit} digital-calendar map-raw-input | %{bin:bopkit} digital-calendar display --no-output")))

(rule
 (alias visa-simulation)
 (deps
  calendar.bin
  initial-memory.txt
  (package bopkit))
 (action
  (bash
   "%{bin:bopkit} simu %{dep:visa.bop} --output-only-on-change | %{bin:bopkit} simu %{dep:calendar-output.bop} -p | %{bin:bopkit} digital-calendar display --no-output")))

(rule
 (target div10.txt)
 (deps
  (package bopkit))
 (action
  (with-stdout-to
   %{target}
   (pipe-stdout
    (run %{bin:bopkit} counter --ni -c 100 -N 7)
    (run %{dep:div10.exe})))))

(rule
 (target div10.bop)
 (deps
  (package bopkit))
 (alias runtest)
 (mode promote)
 (action
  (with-stdout-to
   %{target}
   (run
    %{bin:bopkit}
    bdd
    synthesize
    --block-name=Div10
    --AD=7
    --WL=8
    -f
    %{dep:div10.txt}))))

(executables
 (names div10 get_date)
 (flags
  :standard
  -w
  +a-4-40-41-42-44-45-48-66
  -warn-error
  +a
  -open
  Base
  -open
  Stdio
  -open
  Cmdlang)
 (libraries
  base
  bit_utils
  bopkit_block
  cmdlang
  pplumbing.cmdlang-cmdliner-runner
  core
  stdio
  unix
  threads)
 (lint
  (pps ppx_js_style -allow-let-operators -check-doc-comments))
 (preprocess
  (pps
   -unused-code-warnings=force
   ppx_compare
   ppx_enumerate
   ppx_hash
   ppx_here
   ppx_let
   ppx_sexp_conv
   ppx_sexp_value)))

(cram
 (package bopkit-tests)
 (deps
  (package bopkit)
  get_date.exe
  (glob_files *.txt)
  (glob_files *.asm)
  (glob_files *.bin)
  (glob_files *.bop)))
