// We include the file synthesized by `bopkit bdd`.
#include "starred.bop"

/**
 * FILENAME is the image file we had originally. We'll use it to check the
 * output of the circuit thanks to `bopkit bdd checker`.
 */
#define FILENAME "starred.txt"
#define AD 4
#define WL 7

Test(a:[AD]) = ()
where
  // Here we call the synthesized block via the #include which is at the
  // beginning of the file.
  block[1]:[WL] = Bloc(a:[AD]);

  // Here, just for fun we simulate the synthesized file with another call to
  // the simulator. This is equivalent to the call above. When using the simulator
  // in external blocks, the option [-p] must be added.
  block[2]:[WL] =
    external("bopkit simu starred-tree.bop -p 2>/dev/null", a:[AD]);

  // Here we check the result of both blocks with the bdd checker. It would
  // raise an exception and stops the simulation in case of an invalid result.
  for i = 1 to 2
    external("bopkit bdd checker -AD %{AD} -WL %{WL} -f %{FILENAME}",
      a:[AD],
      block[i]:[WL]);
  end for;
end where;
