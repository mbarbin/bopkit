; dune file generated by '%{bin:bopkit} fmt gen-dune' -- do not edit.

(rule
 (with-stdout-to
  cyclic-include-a.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:cyclic-include-a.bop}")))

(rule
 (alias fmt)
 (action
  (diff cyclic-include-a.bop cyclic-include-a.bop.pp.output)))

(rule
 (with-stdout-to
  cyclic-include-b.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:cyclic-include-b.bop}")))

(rule
 (alias fmt)
 (action
  (diff cyclic-include-b.bop cyclic-include-b.bop.pp.output)))

(rule
 (with-stdout-to
  define-order.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:define-order.bop}")))

(rule
 (alias fmt)
 (action
  (diff define-order.bop define-order.bop.pp.output)))

(rule
 (with-stdout-to
  duplicated-block.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:duplicated-block.bop}")))

(rule
 (alias fmt)
 (action
  (diff duplicated-block.bop duplicated-block.bop.pp.output)))

(rule
 (with-stdout-to
  duplicated-parametrized-block.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:duplicated-parametrized-block.bop}")))

(rule
 (alias fmt)
 (action
  (diff
   duplicated-parametrized-block.bop
   duplicated-parametrized-block.bop.pp.output)))

(rule
 (with-stdout-to
  eval-funarg-1.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:eval-funarg-1.bop}")))

(rule
 (alias fmt)
 (action
  (diff eval-funarg-1.bop eval-funarg-1.bop.pp.output)))

(rule
 (with-stdout-to
  eval-funarg-2.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:eval-funarg-2.bop}")))

(rule
 (alias fmt)
 (action
  (diff eval-funarg-2.bop eval-funarg-2.bop.pp.output)))

(rule
 (with-stdout-to
  eval-funarg-3.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:eval-funarg-3.bop}")))

(rule
 (alias fmt)
 (action
  (diff eval-funarg-3.bop eval-funarg-3.bop.pp.output)))

(rule
 (with-stdout-to
  external-nested-arity-specified.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:external-nested-arity-specified.bop}")))

(rule
 (alias fmt)
 (action
  (diff
   external-nested-arity-specified.bop
   external-nested-arity-specified.bop.pp.output)))

(rule
 (with-stdout-to
  memory-too-short.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:memory-too-short.bop}")))

(rule
 (alias fmt)
 (action
  (diff memory-too-short.bop memory-too-short.bop.pp.output)))

(rule
 (with-stdout-to
  pipe-nested-arity-specified.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:pipe-nested-arity-specified.bop}")))

(rule
 (alias fmt)
 (action
  (diff
   pipe-nested-arity-specified.bop
   pipe-nested-arity-specified.bop.pp.output)))

(rule
 (with-stdout-to
  ram-rom.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:ram-rom.bop}")))

(rule
 (alias fmt)
 (action
  (diff ram-rom.bop ram-rom.bop.pp.output)))

(rule
 (with-stdout-to
  unused-external.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:unused-external.bop}")))

(rule
 (alias fmt)
 (action
  (diff unused-external.bop unused-external.bop.pp.output)))

(rule
 (with-stdout-to
  using-any.bop.pp.output
  (bash "%{bin:bopkit} fmt file %{dep:using-any.bop}")))

(rule
 (alias fmt)
 (action
  (diff using-any.bop using-any.bop.pp.output)))
